<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Spice.ai blog – Spice.ai Blog</title><link>/</link><description>Recent content in Spice.ai Blog on Spice.ai blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Posts: Spice.ai's approach to Time-Series AI</title><link>/posts/2021/11/18/spice.ais-approach-to-time-series-ai/</link><pubDate>Thu, 18 Nov 2021 00:00:00 +0000</pubDate><guid>/posts/2021/11/18/spice.ais-approach-to-time-series-ai/</guid><description>
&lt;p>The &lt;a href="http://Spice.ai">Spice.ai&lt;/a> project strives to help developers build applications that leverage new AI advances which can be easily trained, deployed, and integrated. &lt;a href="/posts/2021/11/15/teaching-apps-how-to-learn-with-spicepods/">A previous blog post&lt;/a> introduced Spicepods: a declarative way to create AI applications with &lt;a href="http://Spice.ai">Spice.ai&lt;/a> technology. While there are many libraries and platforms in the space, &lt;a href="http://Spice.ai">Spice.ai&lt;/a> is focused on time-series data aligning to application-centric and frequently time-dependent data, and a &lt;a href="https://en.wikipedia.org/wiki/Reinforcement_learning">Reinforcement Learning&lt;/a> approach, which can be more developer-friendly than expensive, labeled &lt;a href="https://en.wikipedia.org/wiki/Supervised_learning">supervised learning&lt;/a>.&lt;/p>
&lt;p>This post will discuss some of the challenges and directions for the technology we are developing.&lt;/p>
&lt;h3 id="time-series">Time Series&lt;/h3>
&lt;div style="display: flex; justify-content: center; padding: 5px;">
&lt;div style="display: flex; flex-direction: column;">
&lt;img style="max-width: 600px; margin: auto" src="https://user-images.githubusercontent.com/19952490/142404970-de910848-cdb4-451b-a0d5-302c90215216.png" />
&lt;div syle="font-size: 0.8rem; font-style: italic;">Figure 1. Time Series processing visualization: a time window is usually chosen to process part of the data stream&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>Time series AI has become more popular over recent years, and there is extensive literature on the subject, including time-series-focused neural networks. Research in this space points to the likelihood that there is no silver bullet, and a single approach to time series AI will not be sufficient. However, for developers, this can make building a product complex, as it comes with the challenge of exploring and evaluating many algorithms and approaches.&lt;/p>
&lt;p>A fundamental challenge of time series is the data itself. The shape and length are usually variable and can even be infinite (real-time streams of data). The volume of data required is often too much for simple and efficient machine learning algorithms such as &lt;a href="https://en.wikipedia.org/wiki/Decision_tree">Decision Trees&lt;/a>. This challenge makes Deep Learning popular to process such data. There are several types of neural networks that have been shown to work well with time series so let&amp;rsquo;s review some of the common classes:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Convolutional_neural_network">Convolutional Neural Networks (CNN)&lt;/a>: CNN&amp;rsquo;s can only accept data with fixed lengths: even with the ability to pad the data, this is a major drawback for time-series data as a specific time window needs to be decided. Despite this limitation, they are the most efficient network to train (computation, data needed, time) and usually the smallest storage. CNN&amp;rsquo;s are very robust and used in image/video processing, making them a very good baseline to start with while also benefiting from refined and mature development over the years, such as with the very efficient MobileNet with depth-wise convolutions.&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Recurrent_neural_network">Recurrent Neural Networks (RNN)&lt;/a>: RNNs have been researched for several decades, and while they aren&amp;rsquo;t as fast to train as CNNs, they can be faster to apply as there is no need to feed a time window like CNNs if the desired input/output is in real-time (in a continuous fashion, also called &amp;lsquo;online). RNNs are proven to be very good in some situations, and many new models are being discovered.&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Transformer_(machine_learning_model)">Transformers&lt;/a>: Most of the state-of-the-art results today have been made from transformers and their variations. They are very good at correlating sparse information. Popularized in the famous paper &lt;a href="https://arxiv.org/pdf/1706.03762.pdf">Attention is all you need&lt;/a>, transformers are proven to be flexible with high-performance in many classes (Vision Transformers, Perceiver, etc.). They suffer the same limitation as CNNs for the length of their input (fixed at training time), but they also have a disadvantage of not scaling well with the size of the data (quadratic growth with the length of the time series). They are also the most expensive network to train in general.&lt;/li>
&lt;/ul>
&lt;p>While not a complete representation of classes of neural networks, this list represents the areas of the most potential for &lt;a href="http://Spice.ai">Spice.ai&lt;/a>&amp;rsquo;s time-series AI technology. We also see other interesting paradigms to explore when improving the core technology like Memory Augmented Neural Networks (MANN) or neural network-based Genetical Algorithms.&lt;/p>
&lt;h3 id="reinforcement-learning">Reinforcement Learning&lt;/h3>
&lt;p>Reinforcement Learning (RL) has grown steadily, especially in fields like robotics. Usually, RL doesn&amp;rsquo;t require as much data processing as Supervised Learning, where large datasets can be demanding for hardware and people alike. RL is more dynamic: agents are trained to replicate behaviors/outputs and explore and &amp;lsquo;optimize&amp;rsquo; themselves with their environment to maximize a reward.&lt;/p>
&lt;p>Most of today&amp;rsquo;s research is based on environments the agent can interact with during the training process, known as online learning. Usually, efficient training processes have multiple agent/environment pairs training together and sharing their experiences. Having an environment for agents to interact enables different actions from the actual historical state known as &lt;strong>on-policy learning&lt;/strong>, and using only past experiences without an environment is &lt;strong>off-policy learning&lt;/strong>.&lt;/p>
&lt;div style="display: flex; justify-content: center; padding: 5px;">
&lt;div style="display: flex; flex-direction: column;">
&lt;img style="max-width: 600px; margin: auto" src="https://user-images.githubusercontent.com/19952490/142404987-cc6f0654-d2bd-496a-b6a4-52da19b9f912.png" />
&lt;div syle="font-size: 0.8rem; font-style: italic;"> Figure 2. AI training without interacting with the environment (real world nor simulation). Only gathered data is used for training.&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>&lt;a href="http://Spice.ai">Spice.ai&lt;/a> is initially taking an off-policy approach, where an environment (either pre-made or given by the user) is not required. Despite limiting the exploration of agents, this aligns to an application-centric approach as:&lt;/p>
&lt;ul>
&lt;li>Creating a real-world model or environment can be difficult and expensive to create, arguably even impossible.&lt;/li>
&lt;li>Off-policy learning is normally more efficient than on-policy (time/data and computation).&lt;/li>
&lt;/ul>
&lt;p>The &lt;a href="http://Spice.ai">Spice.ai&lt;/a> approach to time series AI can be described as &amp;lsquo;Data-Driven&amp;rsquo; Reinforcement Learning. This domain is very exciting, and we are building upon excellent research that is being published. The &lt;a href="https://bair.berkeley.edu/">Berkeley Artificial Intelligence Research&lt;/a>&amp;rsquo;s blog shows the potential of this field and many other research entities that have made great discoveries like &lt;a href="https://deepmind.com/">DeepMind&lt;/a>, &lt;a href="https://openai.com/">Open AI&lt;/a>, &lt;a href="https://ai.facebook.com/">Facebook AI&lt;/a> and &lt;a href="https://ai.google/">Google AI&lt;/a> (among many others). We are inspired and are building upon all the research in Reinforcement Learning to develop core &lt;a href="http://Spice.ai">Spice.ai&lt;/a> technology.&lt;/p>
&lt;p>If you are interested in Reinforcement Learning, we recommend following these blogs, and if you&amp;rsquo;d like to partner with us on the mission of making it easier to build intelligent applications by leveraging RL, we invite you to discuss with us on &lt;a href="https://discord.gg/kZnTfneP5u">Discord&lt;/a>, reach out on &lt;a href="https://twitter.com/SpiceAIHQ">Twitter&lt;/a> or &lt;a href="mailto:hey@spiceai.io">email us&lt;/a>.&lt;/p>
&lt;p>Corentin&lt;/p></description></item><item><title>Posts: Announcing the release of Spice.ai v0.4-alpha</title><link>/posts/2021/11/15/announcing-the-release-of-spice.ai-v0.4-alpha/</link><pubDate>Mon, 15 Nov 2021 00:00:00 +0000</pubDate><guid>/posts/2021/11/15/announcing-the-release-of-spice.ai-v0.4-alpha/</guid><description>
&lt;p>We are excited to announce the release of Spice.ai v0.4-alpha! 🏄‍♂️&lt;/p>
&lt;p>Highlights include support for authoring reward functions in a code file, the ability to specify the time of recommendation, and ingestion support for transaction/correlation ids. Authoring reward functions in a code file is a significant improvement to the developer experience than specifying functions inline in the YAML manifest, and we are looking forward to your feedback on it!&lt;/p>
&lt;p>If you are new to Spice.ai, check out the &lt;a href="https://docs.spiceai.org/getting-started/">getting started guide&lt;/a> and star &lt;a href="https://github.com/spiceai/spiceai">spiceai/spiceai&lt;/a> on GitHub.&lt;/p>
&lt;h2 id="highlights-in-v04-alpha">Highlights in v0.4-alpha&lt;/h2>
&lt;h3 id="upgrade-using-spice-upgrade">Upgrade using spice upgrade&lt;/h3>
&lt;p>The &lt;code>spice upgrade&lt;/code> command was added in the v0.3.1-alpha release, so you can now upgrade from v0.3.1 to v0.4 by simply running &lt;code>spice upgrade&lt;/code> in your terminal. Special thanks to community member &lt;a href="https://github.com/Adm28">@Adm28&lt;/a> for contributing this feature!&lt;/p>
&lt;h3 id="reward-function-files">Reward Function Files&lt;/h3>
&lt;p>In addition to defining reward code inline, it is now possible to author reward code in functions in a separate Python file.&lt;/p>
&lt;p>The reward function file path is defined by the &lt;code>reward_funcs&lt;/code> property.&lt;/p>
&lt;p>A function defined in the code file is mapped to an action by authoring its name in the &lt;code>with&lt;/code> property of the relevant reward.&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">training&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">reward_funcs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">my_reward.py&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">rewards&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">reward&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">buy&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">with&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">buy_reward&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">reward&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">sell&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">with&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">sell_reward&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">reward&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">hold&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">with&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">hold_reward&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Learn more in the documentation: &lt;a href="https://docs.spiceai.org/concepts/rewards/external">docs.spiceai.org/concepts/rewards/external&lt;/a>&lt;/p>
&lt;h3 id="time-categories">Time Categories&lt;/h3>
&lt;p>Spice.ai can now learn from cyclical patterns, such as daily, weekly, or monthly cycles.&lt;/p>
&lt;p>To enable automatic cyclical field generation from the observation time, specify one or more time categories in the pod manifest, such as a &lt;code>month&lt;/code> or &lt;code>weekday&lt;/code> in the &lt;code>time&lt;/code> section.&lt;/p>
&lt;p>For example, by specifying &lt;code>month&lt;/code> the Spice.ai engine automatically creates a field in the AI engine data stream called &lt;code>time_month_{month}&lt;/code> with the value calculated from the month of which that timestamp relates.&lt;/p>
&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">time&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">categories&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">month&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">dayofweek&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Supported category values are:
&lt;code>month&lt;/code> &lt;code>dayofmonth&lt;/code> &lt;code>dayofweek&lt;/code> &lt;code>hour&lt;/code>&lt;/p>
&lt;p>Learn more in the documentation: &lt;a href="https://docs.spiceai.org/reference/pod/#time">docs.spiceai.org/reference/pod/#time&lt;/a>&lt;/p>
&lt;h3 id="get-recommendation-for-a-specific-time">Get recommendation for a specific time&lt;/h3>
&lt;p>It is now possible to specify the time of recommendations fetched from the &lt;code>/recommendation&lt;/code> API.&lt;/p>
&lt;p>Valid times are from pod &lt;code>epoch_time&lt;/code> to &lt;code>epoch_time + period&lt;/code>.&lt;/p>
&lt;p>Previously the API only supported recommendations based on the time of the last ingested observation.&lt;/p>
&lt;p>Requests are made in the following format: &lt;code>GET http://localhost:8000/api/v0.1/pods/{pod}/recommendation?time={unix_timestamp}&lt;/code>&lt;/p>
&lt;p>An example for &lt;code>quickstarts/trader&lt;/code>&lt;/p>
&lt;p>&lt;code>GET http://localhost:8000/api/v0.1/pods/trader/recommendation?time=1605729600&lt;/code>&lt;/p>
&lt;p>Specifying &lt;code>{unix_timestamp}&lt;/code> as &lt;code>0&lt;/code> will return a recommendation based on the latest data. An invalid &lt;code>{unix_timestamp}&lt;/code> will return a result that has the valid time range in the error message:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;response&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;result&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;invalid_recommendation_time&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;message&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;The time specified (1610060201) is outside of the allowed range: (1610057600, 1610060200)&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">&amp;#34;error&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="new-in-this-release">New in this release&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Adds&lt;/strong> time categories configuration to the pod manifest to enable learning from cyclical patterns in data - e.g. hour, day of week, day of month, and month&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> support for defining reward functions in a rewards functions code file.&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> the ability to specify recommendation time making it possible to now see which action Spice.ai recommends at any time during the pod period.&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> support for ingestion of transaction/correlation identifiers (e.g. &lt;code>order_id&lt;/code>, &lt;code>trace_id&lt;/code>) in the pod manifest.&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> validation for invalid dataspace names in the pod manifest.&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> the ability to resize columns to the dashboard observation data grid.&lt;/li>
&lt;li>&lt;strong>Updates&lt;/strong> to TensorFlow 2.7 and Keras 2.7&lt;/li>
&lt;li>&lt;strong>Fixes&lt;/strong> a bug where data processors were using data connector params&lt;/li>
&lt;li>&lt;strong>Fixes&lt;/strong> a dashboard issue in the pod observations data grid where a column might not be shown.&lt;/li>
&lt;li>&lt;strong>Fixes&lt;/strong> a crash on pod load if the &lt;code>training&lt;/code> section is not included in the manifest.&lt;/li>
&lt;li>&lt;strong>Fixes&lt;/strong> an issue where data manager stats errors were incorrectly being printed to console.&lt;/li>
&lt;li>&lt;strong>Fixes&lt;/strong> an issue where selectors may not match due to surrounding whitespace.&lt;/li>
&lt;/ul>
&lt;h2 id="resources">Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.spiceai.org/getting-started/">Getting started with Spice.ai&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.spiceai.org/">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/spiceai/quickstarts/blob/trunk/README.md">Quickstarts&lt;/a> and &lt;a href="https://github.com/spiceai/samples/blob/trunk/README.md">Samples&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="community">Community&lt;/h2>
&lt;p>Spice.ai started with the vision to make AI easy for developers. We are building Spice.ai in the open and with the community. Reach out on Discord or by email to get involved. We will also be starting a community call series soon!&lt;/p>
&lt;ul>
&lt;li>Discord: &lt;a href="https://discord.gg/kZnTfneP5u">https://discord.gg/kZnTfneP5u&lt;/a>&lt;/li>
&lt;li>Reddit: &lt;a href="https://www.reddit.com/r/spiceai">https://www.reddit.com/r/spiceai&lt;/a>&lt;/li>
&lt;li>Twitter: &lt;a href="https://twitter.com/spiceaihq">@SpiceAIHQ&lt;/a>&lt;/li>
&lt;li>Email: &lt;a href="mailto:hey@spiceai.io">hey@spiceai.io&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Posts: Teaching Apps how to Learn with Spicepods</title><link>/posts/2021/11/15/teaching-apps-how-to-learn-with-spicepods/</link><pubDate>Mon, 15 Nov 2021 00:00:00 +0000</pubDate><guid>/posts/2021/11/15/teaching-apps-how-to-learn-with-spicepods/</guid><description>
&lt;p>The last post in this series, &lt;a href="https://blog.spiceai.org/posts/2021/11/05/making-apps-that-learn-and-adapt/">Making Apps that Learn and Adapt&lt;/a>, described the shift from building AI/ML solutions to building apps that learn and adapt. But, how does the app learn? And as a developer, how do I teach it what it should learn?&lt;/p>
&lt;p>With &lt;a href="https://spiceai.org">Spice.ai&lt;/a>, we teach the app how to learn using a Spicepod.&lt;/p>
&lt;p>Imagine you own a restaurant. You created a menu, hired staff, constructed the kitchen and dining room, and got off to a great start when it first opened. However, over the years, your customers' tastes changed, you&amp;rsquo;ve had to make compromises on ingredients, and there&amp;rsquo;s a hot new place down the street&amp;hellip; business is stagnating, and you know that you need to make some changes to stay competitive.&lt;/p>
&lt;p>You have a few options. First, you could gather all the data, such as customer surveys, seasonal produce metrics, and staff performance profiles. You may even hire outside consultants. You then take this data to your office, and after spending some time organizing, filtering, and collating it, you&amp;rsquo;ve discovered an insight! Your seafood dishes sell poorly and cost the most&amp;hellip; you are losing money! You spend several weeks or months perfecting a new menu, which you roll out with much fanfare! And then… business is still poor. What!? How could this be? It was a data-driven approach! You start the process again. While this approach is a worthy option, it has long latency from data to learning to implementation.&lt;/p>
&lt;p>Another option is to build real-time learning and adaption directly into the restaurant. Imagine a staff member whose sole job was learning and adapting how the restaurant should operate; lets name them Blue. You write a guide for Blue that defines certain goal metrics, like customer food ratings, staff happiness, and of course, profit. Blue tracks each dish served, from start to finish, from who prepared it to its temperature, its costs, and its final customer taste rating. Blue not only learns from each customer review as each dish is consumed but also how dish preparation affects other goal metrics, like profitability. The restaurant staff consults Blue to determine any adjustments to improve goal metrics as they work. The latency from data to learning, to adaption, has been reduced, from weeks or months to minutes. This option, of course, is not feasible for most restaurants, but software applications can use this approach. Blue and his instructions are analogous to the Spice.ai runtime and manifest.&lt;/p>
&lt;p>In the Spice.ai model, developers teach the app how to learn by describing goals and rewarding its actions, much like how a parent might teach a child. As these rewards are applied in training, the app learns what actions maximize its rewards towards the defined goals.&lt;/p>
&lt;p>Returning to the restaurant example, you can think of the Spice.ai runtime as Blue, and Spicepod manifests as the guide on how Blue should learn. Individual staff members would consult with Blue for ongoing recommendations on decisions to make and how to act. These goals and rewards are defined in &lt;strong>Spicepods&lt;/strong> or &amp;ldquo;pods&amp;rdquo; for short. Spicepods are packages of configuration that describe the application&amp;rsquo;s goals and how it should learn from data. Although it&amp;rsquo;s not a direct analogy, Spicepods and their manifests can be conceptualized similar to Docker containers and Dockerfiles. In contrast, Dockerfiles define the packaging of your app, Spicepods specify the packaging of your app&amp;rsquo;s learning and data.&lt;/p>
&lt;p>&lt;strong>Anatomy of a Spicepod&lt;/strong>&lt;/p>
&lt;p>A Spicepod consists of:&lt;/p>
&lt;ul>
&lt;li>A required YAML manifest that describes how the pod should learn from data&lt;/li>
&lt;li>Optional seed data&lt;/li>
&lt;li>Learned model/state&lt;/li>
&lt;li>Performance telemetry and metrics&lt;/li>
&lt;/ul>
&lt;p>Developers author Spicepods using the &lt;code>spice&lt;/code> CLI command such as with &lt;code>spice pod init &amp;lt;name&amp;gt;&lt;/code> or simply by creating a manifest file such as &lt;code>mypod.yaml&lt;/code> in the &lt;code>spicepods&lt;/code> directory of their application.&lt;/p>
&lt;p>Here&amp;rsquo;s an example of the &lt;a href="https://github.com/spiceai/quickstarts/tree/trunk/tweet-recommendation/README.md">Tweet Recommendation Quickstart&lt;/a> Spicepod manifest.&lt;/p>
&lt;img width="400" alt="tweet-recommendation-manifest" src="https://user-images.githubusercontent.com/80174/141739579-9cf7b971-7637-43bc-b661-89115e3b1b59.png">
&lt;p>&lt;em>A screenshot of the Spicepod manifest for the Tweet Recommendation Quickstart&lt;/em>&lt;/p>
&lt;p>You can see the data definitions under &lt;code>dataspaces&lt;/code>, the actions the application may take under &lt;code>actions&lt;/code>, and their rewards when training.&lt;/p>
&lt;p>In the next post, I&amp;rsquo;ll walk through in detail each section of the pod manifest. In the meantime, you can review the documentation for a complete reference of the &lt;a href="https://docs.spiceai.org/reference/pod/">Spicepod manifest syntax&lt;/a>.&lt;/p>
&lt;p>&lt;strong>Spicepods as packages&lt;/strong>&lt;/p>
&lt;p>On disk, Spicepods are generally layouts of a manifest file, seed data, and trained models, but they can also be exported as zipped packages.&lt;/p>
&lt;img width="235" alt="spicepod-layout" src="https://user-images.githubusercontent.com/80174/141739662-7be361fe-aa79-4408-bb3d-311fd0f849eb.png">
&lt;p>&lt;em>A screenshot of the Spicepod layout for the trader quickstart application&lt;/em>&lt;/p>
&lt;p>When the runtime exports a Spicepod using the &lt;code>spice export&lt;/code> command, it is saved with a &lt;code>.spicepod&lt;/code> extension. It can then be shared, archived, or imported into another instance of the Spice.ai runtime.&lt;/p>
&lt;p>Soon, we also expect to enable publishing of &lt;code>.spicepods&lt;/code> to spicerack.org, from where community-created Spicepods can easily be added to your application using &lt;code>spice add &amp;lt;pod name&amp;gt;&lt;/code> (currently, only Spice AI published pods are available on spicerack.org).&lt;/p>
&lt;p>Treating Spicepods as packages and enabling their sharing and distribution through spicerack.org will help developers share their &amp;ldquo;restaurant guides&amp;rdquo; and build upon each other&amp;rsquo;s work, much like they do with npmjs.org or pypi.org. In this way, developers can together build better and more intelligent applications.&lt;/p>
&lt;p>In the next post, we&amp;rsquo;ll dive deeper into authoring a Spicepod manifest to create an intelligent application. Follow &lt;a href="https://twitter.com/SpiceAIHQ">@SpiceAIHQ&lt;/a> on Twitter to get an update when we post.&lt;/p>
&lt;p>If you haven&amp;rsquo;t already, read the next the first post in the series, &lt;a href="https://blog.spiceai.org/posts/2021/11/05/making-apps-that-learn-and-adapt/">Making Apps that Learn and Adapt&lt;/a>.&lt;/p>
&lt;h3 id="learn-more-and-contribute">Learn more and contribute&lt;/h3>
&lt;p>Building intelligent apps that leverage AI is still way too hard, even for advanced developers. Our mission is to make this as easy as creating a modern web page. If the vision resonates with you, join us!&lt;/p>
&lt;p>Our &lt;a href="https://github.com/spiceai/spiceai/blob/trunk/docs/ROADMAP.md">Spice.ai Roadmap&lt;/a> is public, and now that we have launched, the project and work are open for collaboration.&lt;/p>
&lt;p>If you are interested in partnering, we&amp;rsquo;d love to talk. Try out &lt;a href="https://spiceai.org">Spice.ai&lt;/a>, &lt;a href="mailto:hey@spiceai.io">email us&lt;/a> &amp;ldquo;hey,&amp;rdquo; get in touch on &lt;a href="https://discord.gg/kZnTfneP5u">Discord&lt;/a>, or reach out on &lt;a href="https://twitter.com/SpiceAIHQ">Twitter&lt;/a>.&lt;/p>
&lt;p>We are just getting started! 🚀&lt;/p>
&lt;p>Luke&lt;/p></description></item><item><title>Posts: Making Apps That Learn And Adapt</title><link>/posts/2021/11/05/making-apps-that-learn-and-adapt/</link><pubDate>Fri, 05 Nov 2021 00:00:00 +0000</pubDate><guid>/posts/2021/11/05/making-apps-that-learn-and-adapt/</guid><description>
&lt;p>In the &lt;a href="https://blog.spiceai.org/posts/2021/09/07/introducing-spice.ai-open-source-time-series-ai-for-developers/">Spice.ai announcement blog post&lt;/a>, we shared some of the inspiration for the project stemming from challenges in applying and integrating AI/ML into a neurofeedback application. Building upon those ideas, in this post, we explore the shift in approach from a focus of data science and machine learning (ML) to apps that learn and adapt.&lt;/p>
&lt;p>As a developer, I&amp;rsquo;ve followed the AI/ML space with keen interest and been impressed with the advances and announcements that only seem to be increasing. &lt;a href="https://stateof.ai">stateof.ai&lt;/a> recently published its 2021 report, and once again, it&amp;rsquo;s been another great year of progress. At the same time, it&amp;rsquo;s still more challenging than ever for mainstream developers to integrate AI/ML into their applications. For most developers, where AI/ML is not their full-time job, and without the support of a dedicated ML team, creating and developing an intelligent application that learns and adapts is still too hard.&lt;/p>
&lt;p>Most solutions on the market, even those that claim they are for developers, focus on helping make ML easier instead of making it easier to build applications. These solutions have been great for advancing ML itself but have not helped developers leverage ML in their apps to make them intelligent. Even when a developer successfully integrates ML into an application, it might make that application smart, but often does not help the app continue to learn and adapt over time.&lt;/p>
&lt;p>Traditionally, the industry has viewed AI/ML as separate from the application. A pipeline, service, or team is provided with data, which trains on that data, and can then provide answers or insights. These solutions are often created with a waterfall-like approach, gathering and defining requirements, designing, implementing, testing, and deploying. Sometimes this process can take months or even years.&lt;/p>
&lt;p>With Spice.ai, we propose a new approach to building applications. By bringing AI/ML alongside your compute and data and incorporating it as part of your application, the app can incrementally adopt recommendations from the AI engine and in addition the AI engine can learn from the application&amp;rsquo;s data and actions. This approach shifts from waterfall-like to agile-like, where the AI engine ingests streams of application and external data, along with the results of the application&amp;rsquo;s actions, to continuously learn. This virtuous feedback cycle from the app to the AI engine and back again enables the app to get smarter and adapt over time. In this approach, building your application &lt;em>is&lt;/em> developing the ML.&lt;/p>
&lt;p>Being part of the application is not just conceptual. Development teams deploy the Spice.ai runtime and AI engine with the application as a sidecar or microservice, enabling the app services and runtime to work together and for data to be kept application local. A developer teaches the AI engine how to learn by defining application goals and rewards for actions the application takes. The AI Engine observes the application and the consequences of its actions, which feeds into its experience. As the AI engine learns, the application can adapt.&lt;/p>
&lt;div style="display: flex; justify-content: center; padding: 5px;">
&lt;div style="display: flex; flex-direction: column;">
&lt;img style="max-width: 400px;" src="https://user-images.githubusercontent.com/80174/140449760-97974f3c-8a78-4ea2-9ec5-843dc3cff5b6.png" />
&lt;/div>
&lt;/div>
&lt;p>As developers shift from thinking about disparate applications and ML to building applications where AI that learns and adapts is integrated as a core part of the application logic, a new class of intelligent applications will emerge. And as technical talent becomes even more scarce, applications built this way will be necessary, not just to be competitive but to be even built at all.&lt;/p>
&lt;p>In the next post, I&amp;rsquo;ll discuss the concept of Spicepods, bundles of configuration that describes how the application should learn, and how the Spice.ai runtime hosts and uses them to help developers make applications that learn.&lt;/p>
&lt;h3 id="learn-more-and-contribute">Learn more and contribute&lt;/h3>
&lt;p>Building intelligent apps that leverage AI is still way too hard, even for advanced developers. Our mission is to make this as easy as creating a modern web page. If the vision resonates with you, join us!&lt;/p>
&lt;p>Our &lt;a href="https://github.com/spiceai/spiceai/blob/trunk/docs/ROADMAP.md">Spice.ai Roadmap&lt;/a> is public, and now that we have launched, the project and work are open for collaboration.&lt;/p>
&lt;p>If you are interested in partnering, we&amp;rsquo;d love to talk. Try out &lt;a href="https://spiceai.org">Spice.ai&lt;/a>, &lt;a href="mailto:hey@spiceai.io">email us&lt;/a> &amp;ldquo;hey,&amp;rdquo; get in touch on &lt;a href="https://discord.gg/kZnTfneP5u">Discord&lt;/a>, or reach out on &lt;a href="https://twitter.com/SpiceAIHQ">Twitter&lt;/a>.&lt;/p>
&lt;p>We are just getting started! 🚀&lt;/p>
&lt;p>Luke&lt;/p></description></item><item><title>Posts: Announcing the release of Spice.ai v0.3.1-alpha</title><link>/posts/2021/11/02/announcing-the-release-of-spice.ai-v0.3.1-alpha/</link><pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate><guid>/posts/2021/11/02/announcing-the-release-of-spice.ai-v0.3.1-alpha/</guid><description>
&lt;p>We are excited to announce the release of Spice.ai v0.3.1-alpha! 🎃&lt;/p>
&lt;p>This point release focuses on fixes and improvements to v0.3-alpha. Highlights include the ability to specify both seed and runtime data, to select custom named fields for &lt;code>time&lt;/code> and &lt;code>tags&lt;/code>, a new &lt;code>spice upgrade&lt;/code> command and several bug fixes.&lt;/p>
&lt;p>A special acknowledgment to &lt;a href="https://github.com/Adm28">@Adm28&lt;/a>, who added the new &lt;code>spice upgrade&lt;/code> command, which enables the CLI to self-update, which in turn will auto-update the runtime.&lt;/p>
&lt;h2 id="highlights-in-v031-alpha">Highlights in v0.3.1-alpha&lt;/h2>
&lt;h3 id="upgrade-command">Upgrade command&lt;/h3>
&lt;p>The CLI can now be updated using the new &lt;code>spice upgrade&lt;/code> command. This command will check for, download, and install the latest Spice.ai CLI release, which will become active on it&amp;rsquo;s next run.&lt;/p>
&lt;p>When run, the CLI will check for the matching version of the Spice.ai runtime, and will automatically download and install it as necessary.&lt;/p>
&lt;p>The version of both the Spice.ai CLI and runtime can be checked with the &lt;code>spice version&lt;/code> CLI command.&lt;/p>
&lt;h3 id="seed-data">Seed data&lt;/h3>
&lt;p>When working with streaming data sources, like market prices, it&amp;rsquo;s often also useful to seed the dataspace with historical data. Spice.ai enables this with the new &lt;code>seed_data&lt;/code> node in the dataspace configuration. The syntax is exactly the same as the &lt;code>data&lt;/code> syntax. For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">dataspaces&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">from&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">coinbase&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">btcusd&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">seed_data&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">connector&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">file&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">params&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">path/to/seed/data.csv&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">processor&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">csv&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">data&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">connector&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">coinbase&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">params&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">product_ids&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">BTC-USD&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">processor&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">json&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The seed data will be fetched first, before the runtime data is initialized. Both sets of connectors and processors use the dataspace scoped &lt;code>measurements&lt;/code>, &lt;code>categories&lt;/code> and &lt;code>tags&lt;/code> for processing, and both data sources are merged in pod-scoped observation timeline.&lt;/p>
&lt;h3 id="time-field-selectors">Time field selectors&lt;/h3>
&lt;p>Before v0.3.1-alpha, data was required to include a specific &lt;code>time&lt;/code> field. In v0.3.1-alpha, the &lt;a href="https://github.com/spiceai/data-components-contrib/blob/trunk/dataprocessors/json/README.md">JSON&lt;/a> and &lt;a href="https://github.com/spiceai/data-components-contrib/tree/trunk/dataprocessors/csv">CSV&lt;/a> data processors now support the ability to select a specific field to populate the time field. An example selector to use the &lt;code>created_at&lt;/code> column for &lt;code>time&lt;/code> is:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">data&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">processor&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">csv&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">params&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">time_selector&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">created_at&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="tag-field-selectors">Tag field selectors&lt;/h3>
&lt;p>Before v0.3.1-alpha, &lt;a href="https://docs.spiceai.org/reference/pod/#dataspacestags">tags&lt;/a> were required to be placed in a &lt;code>_tags&lt;/code> field. In v0.3.1-alpha, any field can now be selected to populate tags. Tags are pod-unique string values, and the union of all selected fields will make up the resulting tag list. For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">dataspace&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">from&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">twitter&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">tweets&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">tags&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">selectors&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">tags&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">author_id&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">values&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">spiceaihq&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">spicy&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="new-in-this-release">New in this release&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Adds&lt;/strong> a new &lt;code>spice upgrade&lt;/code> command for self-upgrade of the Spice.ai CLI.&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> a new &lt;code>seed_data&lt;/code> node to the dataspace configuration, enabling the dataspace to be seeded with an alternative source of data.&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> the ability to select a custom time field in JSON and CSV data processors with the &lt;code>time_selector&lt;/code> parameter.&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> the ability to select custom tag fields in the dataspace configuration with &lt;code>selectors&lt;/code> list.&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> error reporting for AI engine crashes, where previously it would fail silently.&lt;/li>
&lt;li>&lt;strong>Fixes&lt;/strong> the dashboard pods list from &amp;ldquo;jumping&amp;rdquo; around due to being unsorted.&lt;/li>
&lt;li>&lt;strong>Fixes&lt;/strong> rare cases where categorical data might be sent to the AI engine in the wrong format.&lt;/li>
&lt;/ul>
&lt;h2 id="resources">Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.spiceai.org/getting-started/">Getting started with Spice.ai&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.spiceai.org/">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/spiceai/quickstarts/blob/trunk/README.md">Quickstarts&lt;/a> and &lt;a href="https://github.com/spiceai/samples/blob/trunk/README.md">Samples&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="community">Community&lt;/h2>
&lt;p>Spice.ai started with the vision to make AI easy for developers. We are building Spice.ai in the open and with the community. Reach out on Discord or by email to get involved. We will also be starting a community call series soon!&lt;/p>
&lt;ul>
&lt;li>Discord: &lt;a href="https://discord.gg/kZnTfneP5u">https://discord.gg/kZnTfneP5u&lt;/a>&lt;/li>
&lt;li>Reddit: &lt;a href="https://www.reddit.com/r/spiceai">https://www.reddit.com/r/spiceai&lt;/a>&lt;/li>
&lt;li>Twitter: &lt;a href="https://twitter.com/spiceaihq">@SpiceAIHQ&lt;/a>&lt;/li>
&lt;li>Email: &lt;a href="mailto:hey@spiceai.io">hey@spiceai.io&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Posts: Spice.ai v0.3-alpha is now available</title><link>/posts/2021/10/26/spice.ai-v0.3-alpha-is-now-available/</link><pubDate>Tue, 26 Oct 2021 00:00:00 +0000</pubDate><guid>/posts/2021/10/26/spice.ai-v0.3-alpha-is-now-available/</guid><description>
&lt;p>We are excited to announce the release of Spice.ai v0.3-alpha! 🎉&lt;/p>
&lt;p>This release adds support for ingestion, automatic encoding, and training of categorical data, enabling more use-cases and datasets beyond just numerical measurements. For example, perhaps you want to learn from data that includes a category of t-shirt sizes, with discrete values, such as small, medium, and large. The v0.3 engine now supports this and automatically encodes the categorical string values into numerical values that the AI engine can use. Also included is a preview of data visualizations in the dashboard, which is helpful for developers as they author Spicepods and dataspaces.&lt;/p>
&lt;div style="display: flex; justify-content: center;">
&lt;div style="display: flex; flex-direction: column;">
&lt;img style="max-width: 500px;" src="https://user-images.githubusercontent.com/80174/138641533-612d1541-a90e-4279-b4f9-2872e02619d6.png" />
&lt;em style="text-align: center">A screenshot of the data visualization preview&lt;/em>
&lt;/div>
&lt;/div>
&lt;p>A special acknowledgment to &lt;a href="https://github.com/sboorlagadda">@sboorlagadda&lt;/a>, who submitted the first Spice.ai feature contribution from the community ever! He added the ability to list pods from the CLI with the new &lt;code>spice pods list&lt;/code> command. Thank you, &lt;a href="https://github.com/sboorlagadda">@sboorlagadda&lt;/a>!!!&lt;/p>
&lt;div style="display: flex; justify-content: center;">
&lt;div style="display: flex; flex-direction: column;">
&lt;img style="max-width: 500px;" src="https://user-images.githubusercontent.com/80174/138642457-a8f254ce-6b4f-4836-b921-f0eb0feadeab.png" />
&lt;em style="text-align: center">A screenshot of the new spice pods list command and output.&lt;/em>
&lt;/div>
&lt;/div>
&lt;p>If you are new to Spice.ai, check out the &lt;a href="https://docs.spiceai.org/getting-started/">getting started guide&lt;/a> and star &lt;a href="https://github.com/spiceai/spiceai">spiceai/spiceai&lt;/a> on GitHub.&lt;/p>
&lt;h2 id="highlights-in-v03-alpha">Highlights in v0.3-alpha&lt;/h2>
&lt;h3 id="categorical-data">Categorical data&lt;/h3>
&lt;p>In v0.1, the runtime and AI engine only supported ingesting numerical data. In v0.2, tagged data was accepted and automatically encoded into fields available for learning. In this release, v0.3, categorical data can now also be ingested and automatically encoded into fields available for learning. This is a &lt;em>breaking change&lt;/em> with the format of the manifest changing separating numerical measurements and categorical data.&lt;/p>
&lt;p>Pre-v0.3, the manifest author specified numerical data using the &lt;code>fields&lt;/code> node.&lt;/p>
&lt;p>In v0.3, numerical data is now specified under &lt;code>measurements&lt;/code> and categorical data under &lt;code>categories&lt;/code>. E.g.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">dataspaces&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">from&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">event&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">stream&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">measurements&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">duration&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">selector&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">length_of_time&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">fill&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">none&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">guest_count&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">selector&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">num_guests&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">fill&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">none&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">categories&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">event_type&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">values&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">dinner&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">party&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">target_audience&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">values&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">employees&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">investors&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">tags&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">tagA&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">tagB&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="data-visualizations-preview">Data visualizations preview&lt;/h3>
&lt;p>A top piece of community feedback was the ability to visualize data. After first running Spice.ai, we&amp;rsquo;d often hear from developers, &amp;ldquo;how do I see the data?&amp;rdquo;. A preview of data visualizations is now included in the dashboard on the pod page.&lt;/p>
&lt;h3 id="listing-pods">Listing pods&lt;/h3>
&lt;p>Once the Spice.ai runtime has started, you can view the loaded pods on the dashboard and fetch them via API call &lt;a href="http://localhost:8000/api/v0.1/pods">localhost:8000/api/v0.1/pods&lt;/a>. To make it even easier, we&amp;rsquo;ve added the ability to list them via the CLI with the new &lt;code>spice pods list&lt;/code> command, which shows the list of pods and their manifest paths.&lt;/p>
&lt;h3 id="coinbase-data-connector">Coinbase data connector&lt;/h3>
&lt;p>A new &lt;a href="https://github.com/spiceai/data-components-contrib/blob/trunk/dataconnectors/coinbase/README.md">Coinbase data connector&lt;/a> is included in v0.3, enabling the streaming of live market ticker prices from Coinbase Pro. Enable it by specifying the &lt;code>coinbase&lt;/code> data connector and providing a list of Coinbase Pro product ids. E.g. &amp;ldquo;BTC-USD&amp;rdquo;. A new sample which demonstrates is also available with its associated Spicepod available from the spicerack.org registry. Get it with &lt;code>spice add samples/trader&lt;/code>&lt;/p>
&lt;h3 id="tweet-recommendation-quickstart">Tweet Recommendation Quickstart&lt;/h3>
&lt;p>A new &lt;a href="https://github.com/spiceai/quickstarts/blob/trunk/tweet-recommendation/README.md">Tweet Recommendation Quickstart&lt;/a> has been added. Given past tweet activity and metrics of a given account, this app can recommend when to tweet, comment, or retweet to maximize for like count, interaction rates, and outreach of said given Twitter account.&lt;/p>
&lt;h3 id="trader-sample">Trader Sample&lt;/h3>
&lt;p>A new &lt;a href="https://github.com/spiceai/samples/blob/trunk/trader/README.md">Trader Sample&lt;/a> has been added in addition to the Trader Quickstart. The sample uses the new &lt;a href="https://github.com/spiceai/data-components-contrib/blob/trunk/dataconnectors/coinbase/README.md">Coinbase data connector&lt;/a> to stream live Coinbase Pro ticker data for learning.&lt;/p>
&lt;h2 id="new-in-this-release">New in this release&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Adds&lt;/strong> support for ingesting, encoding, and training on categorical data. v0.3 uses one-hot-encoding.&lt;/li>
&lt;li>&lt;strong>Changes&lt;/strong> Spicepod manifest fields node to &lt;a href="docs.spiceai.org/reference/pod/#dataspacesmeasurements">measurements&lt;/a> and add the &lt;a href="docs.spiceai.org/reference/pod/#dataspacescategories">categories&lt;/a> node.&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> the ability to select a field from the source data and map it to a different field name in the dataspace. See &lt;a href="docs.spiceai.org/reference/pod/#dataspacesmeasurementsselector">an example for measurements&lt;/a> in docs.&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> support for JSON content type when fetching from the &lt;code>/observations&lt;/code> API. Previously, only CSV was supported.&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> a preview version of data visualizations to the dashboard. The grid has several limitations, one of which is it currently cannot be resized.&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> the ability to select which learning algorithm to use via the CLI, the API, and specified in the Spicepod manifest. Possible choices are currently &amp;ldquo;vpg&amp;rdquo;, Vanilla Policy Gradient and &amp;ldquo;dql&amp;rdquo;, Deep Q-Learning. Shout out to &lt;a href="https://github.com/corentin-pro">@corentin-pro&lt;/a>, who added this feature on his second day on the team!&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> the ability to list loaded pods with the CLI command spice pods list.&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> a new &lt;a href="https://github.com/spiceai/data-components-contrib/blob/trunk/dataconnectors/coinbase/README.md">coinbase data connector&lt;/a> for Coinbase Pro market prices.&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> a new &lt;a href="https://github.com/spiceai/quickstarts/blob/trunk/tweet-recommendation/README.md">Tweet Recommendation Quickstart&lt;/a>.&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> a new &lt;a href="https://github.com/spiceai/samples/blob/trunk/trader/README.md">Trader Sample&lt;/a>.&lt;/li>
&lt;li>&lt;strong>Fixes&lt;/strong> bug where the &lt;code>/observations&lt;/code> endpoint was not providing fully qualified field names.&lt;/li>
&lt;li>&lt;strong>Fixes&lt;/strong> issue where debugging messages were printed when using spice add.&lt;/li>
&lt;/ul>
&lt;h2 id="resources">Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.spiceai.org/getting-started/">Getting started with Spice.ai&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.spiceai.org/">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/spiceai/quickstarts/blob/trunk/README.md">Quickstarts&lt;/a> and &lt;a href="https://github.com/spiceai/samples/blob/trunk/README.md">Samples&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="community">Community&lt;/h2>
&lt;p>Spice.ai started with the vision to make AI easy for developers. We are building Spice.ai in the open and with the community. Reach out on Discord or by email to get involved. We will also be starting a community call series soon!&lt;/p>
&lt;ul>
&lt;li>Discord: &lt;a href="https://discord.gg/kZnTfneP5u">https://discord.gg/kZnTfneP5u&lt;/a>&lt;/li>
&lt;li>Reddit: &lt;a href="https://www.reddit.com/r/spiceai">https://www.reddit.com/r/spiceai&lt;/a>&lt;/li>
&lt;li>Twitter: &lt;a href="https://twitter.com/spiceaihq">@SpiceAIHQ&lt;/a>&lt;/li>
&lt;li>Email: &lt;a href="mailto:hey@spiceai.io">hey@spiceai.io&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Posts: Announcing the release of Spice.ai v0.2.1-alpha</title><link>/posts/2021/10/12/announcing-the-release-of-spice.ai-v0.2.1-alpha/</link><pubDate>Tue, 12 Oct 2021 00:00:00 +0000</pubDate><guid>/posts/2021/10/12/announcing-the-release-of-spice.ai-v0.2.1-alpha/</guid><description>
&lt;p>Announcing the release of Spice.ai v0.2.1-alpha! 🚚&lt;/p>
&lt;p>This point release focuses on fixes and improvements to v0.2-alpha. Highlights include the ability to specify how missing data should be treated and a new production mode for &lt;code>spiced&lt;/code>.&lt;/p>
&lt;p>This release supports the ability to specify how the runtime should treat missing data. Previous releases filled missing data with the last value (or initial value) in the series. While this makes sense for some data, i.e., market prices of a stock or cryptocurrency, it does not make sense for discrete data, i.e., ratings. In v0.2.1, developers can now add the &lt;code>fill&lt;/code> parameter on a dataspace field to specify the behavior. This release supports fill types &lt;code>previous&lt;/code> and &lt;code>none&lt;/code>. The default is &lt;code>previous&lt;/code>.&lt;/p>
&lt;p>Example in a manifest:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="color:#204a87;font-weight:bold">dataspaces&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">from&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">twitter&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">tweets&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">fields&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">likes&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">fill&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">none&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># The new fill parameter&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>spiced&lt;/code> now defaults to a new production mode when run standalone (not via the CLI), with development mode now explicitly set with the &lt;code>--development&lt;/code> flag. Production mode does not activate development time features, such as the Spicepod file watcher. The CLI always runs &lt;code>spiced&lt;/code> in development mode as it is not expected to be used in production deployments.&lt;/p>
&lt;h2 id="new-in-this-release">New in this release&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Adds&lt;/strong> a &lt;code>fill&lt;/code> parameter to dataspace fields to specify how missing values should be treated.&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> the ability to specify the fill behavior of empty values in a dataspace.&lt;/li>
&lt;li>&lt;strong>Simplifies&lt;/strong> releases with a single &lt;code>spiceai&lt;/code> release instead of separate &lt;code>spice&lt;/code> and &lt;code>spiced&lt;/code> releases.&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> an explicit &lt;strong>development&lt;/strong> mode to &lt;code>spiced&lt;/code>. Production mode does not activate the file watcher.&lt;/li>
&lt;li>&lt;strong>Fixes&lt;/strong> a bug when the pod parameter &lt;code>epoch_time&lt;/code> was not set which would cause data not to be sent to the AI engine.&lt;/li>
&lt;li>&lt;strong>Fixes&lt;/strong> a bug where the User-Agent was not set correctly from CLI calls to api.spicerack.org&lt;/li>
&lt;/ul>
&lt;h2 id="resources">Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.spiceai.org/getting-started/">Getting started with Spice.ai&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.spiceai.org/">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/spiceai/quickstarts/blob/trunk/README.md">Quickstarts&lt;/a> and &lt;a href="https://github.com/spiceai/samples/blob/trunk/README.md">Samples&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="community">Community&lt;/h2>
&lt;p>Spice.ai started with the vision to make AI easy for developers. We are building Spice.ai in the open and with the community. Reach out on Discord or by email to get involved. We will also be starting a community call series soon!&lt;/p>
&lt;ul>
&lt;li>Discord: &lt;a href="https://discord.gg/kZnTfneP5u">https://discord.gg/kZnTfneP5u&lt;/a>&lt;/li>
&lt;li>Reddit: &lt;a href="https://www.reddit.com/r/spiceai">https://www.reddit.com/r/spiceai&lt;/a>&lt;/li>
&lt;li>Twitter: &lt;a href="https://twitter.com/spiceaihq">@SpiceAIHQ&lt;/a>&lt;/li>
&lt;li>Email: &lt;a href="mailto:hey@spiceai.io">hey@spiceai.io&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Posts: Spice.ai v0.2-alpha is now available</title><link>/posts/2021/10/04/spice.ai-v0.2-alpha-is-now-available/</link><pubDate>Mon, 04 Oct 2021 00:00:00 +0000</pubDate><guid>/posts/2021/10/04/spice.ai-v0.2-alpha-is-now-available/</guid><description>
&lt;p>We are excited to announce the release of Spice.ai v0.2-alpha! 🎉&lt;/p>
&lt;p>This release is the first major version since the &lt;a href="https://blog.spiceai.org/posts/2021/09/07/introducing-spice.ai-open-source-time-series-ai-for-developers/">initial v0.1 announcement&lt;/a> and includes significant improvements based upon community and customer feedback. If you are new to Spice.ai, check out the &lt;a href="https://docs.spiceai.org/getting-started/">getting started guide&lt;/a> and star &lt;a href="https://github.com/spiceai/spiceai">spiceai/spiceai&lt;/a> on GitHub.&lt;/p>
&lt;h2 id="highlights-in-v02-alpha">Highlights in v0.2-alpha&lt;/h2>
&lt;h3 id="tagged-data">Tagged data&lt;/h3>
&lt;p>In the first release, the runtime and AI engine could only ingest numerical data. In v0.2, tagged data is accepted and automatically encoded into fields available for learning. For example, it&amp;rsquo;s now possible to include a &amp;ldquo;liked&amp;rdquo; tag when using tweet data, automatically encoded to a 0/1 field for training. Both CSV and the new &lt;a href="https://github.com/spiceai/data-components-contrib/blob/trunk/dataprocessors/json/README.md">JSON&lt;/a> observation formats support tags. The v0.3 release will add additional support for sets of categorical data.&lt;/p>
&lt;h3 id="streaming-data">Streaming data&lt;/h3>
&lt;p>Previously, the runtime would trigger each &lt;a href="https://github.com/spiceai/data-components-contrib/blob/trunk/dataconnectors/README.md">data connector&lt;/a> to fetch on a 15-second interval. In v0.2, we upgraded the &lt;a href="https://github.com/spiceai/data-components-contrib/blob/trunk/dataconnectors/dataconnector.go">interface for data connectors&lt;/a> to a push/streaming model, which enables continuous streaming data into the environment and AI engine.&lt;/p>
&lt;h3 id="interpreted-data">Interpreted data&lt;/h3>
&lt;p>&lt;a href="http://Spice.ai">Spice.ai&lt;/a> works together with your application code and works best when it&amp;rsquo;s provided continuous feedback. This feedback could be from the application itself, for example, ratings, likes, thumbs-up/down, profit from trades, or external expertise. The &lt;a href="https://docs.spiceai.org/concepts/interpretations">interpretations API&lt;/a> was &lt;a href="https://github.com/spiceai/spiceai/blob/trunk/docs/release_notes/v0.1.1-alpha.md">introduced in v0.1.1&lt;/a>, and v0.2 adds AI engine support providing a way to give meaning or an interpretation of ranges of time-series data, which are then available within reward functions. For example, a time range of stock prices could be a &amp;ldquo;good time to buy,&amp;rdquo; or perhaps Tuesday mornings is a &amp;ldquo;good time to tweet,&amp;rdquo; and an application or expert can teach the AI engine this through interpretations providing a shortcut to it&amp;rsquo;s learning.&lt;/p>
&lt;h2 id="new-in-this-release">New in this release&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Adds&lt;/strong> core runtime and AI engine tagged data support&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> tagged data support to the CSV processor&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> streaming data support to the engine and data connectors&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> a new &lt;a href="https://github.com/spiceai/data-components-contrib/blob/trunk/dataprocessors/json/README.md">JSON data processor&lt;/a> for ingesting JSON data&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> a new &lt;a href="https://github.com/spiceai/data-components-contrib/blob/trunk/dataconnectors/twitter/twitter.go">Twitter data connector&lt;/a> with JSON processor support&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> a new &lt;code>/pods//dataspaces&lt;/code> API&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> support for using interpretations in reward functions &lt;a href="https://docs.spiceai.org/concepts/interpretations">Learn more&lt;/a>.&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> support for downloading zipped pods from the &lt;a href="http://spicerack.org">spicerack.org&lt;/a> registry&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> support for adding data along with the pod manifest when adding a pod from the &lt;a href="http://spicerack.org">spicerack.org&lt;/a> registry&lt;/li>
&lt;li>&lt;strong>Adds&lt;/strong> basic &lt;code>/pods//diagnostics&lt;/code> API&lt;/li>
&lt;li>&lt;strong>Fixes&lt;/strong> pod period, interval, and granularity not being correctly set when trying to use a &amp;ldquo;d&amp;rdquo; format&lt;/li>
&lt;li>&lt;strong>Fixes&lt;/strong> the color scheme of action counts in the dashboard to improve readability&lt;/li>
&lt;/ul>
&lt;h2 id="resources">Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.spiceai.org/getting-started/">Getting started with Spice.ai&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.spiceai.org/">Documentation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/spiceai/quickstarts/blob/trunk/README.md">Quickstarts&lt;/a> and &lt;a href="https://github.com/spiceai/samples/blob/trunk/README.md">Samples&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="community">Community&lt;/h2>
&lt;p>Spice.ai started with the vision to make AI easy for developers. We are building Spice.ai in the open and with the community. Reach out on Discord or by email to get involved. We will also be starting a community call series soon!&lt;/p>
&lt;ul>
&lt;li>Discord: &lt;a href="https://discord.gg/kZnTfneP5u">https://discord.gg/kZnTfneP5u&lt;/a>&lt;/li>
&lt;li>Reddit: &lt;a href="https://www.reddit.com/r/spiceai">https://www.reddit.com/r/spiceai&lt;/a>&lt;/li>
&lt;li>Twitter: &lt;a href="https://twitter.com/spiceaihq">@SpiceAIHQ&lt;/a>&lt;/li>
&lt;li>Email: &lt;a href="mailto:hey@spiceai.io">hey@spiceai.io&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Posts: Introducing Spice.ai - open source, time series AI for developers</title><link>/posts/2021/09/07/introducing-spice.ai-open-source-time-series-ai-for-developers/</link><pubDate>Tue, 07 Sep 2021 00:00:00 +0000</pubDate><guid>/posts/2021/09/07/introducing-spice.ai-open-source-time-series-ai-for-developers/</guid><description>
&lt;p>AI has recently seen some impressive advances, like with OpenAI &lt;a href="https://openai.com/blog/openai-codex/">Codex&lt;/a> and DeepMind &lt;a href="https://deepmind.com/blog/article/alphafold-a-solution-to-a-50-year-old-grand-challenge-in-biology">AlphaFold 2&lt;/a>. And at the same time, for most developers, leveraging AI to create intelligent applications is still way too hard. The &lt;a href="https://hackernoon.com/the-ai-hierarchy-of-needs-18f111fcc007">Data Science Hierarchy of Needs&lt;/a> pyramid from 2017 &lt;em>still&lt;/em> illustrates it well; there are too many unmet needs in applying ML in applications.&lt;/p>
&lt;p>We faced the same AI development challenges many developers do, even though we had years of engineering experience at Microsoft and GitHub, there was too much to learn and build. And we simply didn&amp;rsquo;t have the time, resources, or tools to learn and utilize AI effectively in the project. After experiencing this pain ourselves, we saw an opportunity to make it better for everyone.&lt;/p>
&lt;p>Today, we are making &lt;a href="https://spiceai.org/">Spice.ai&lt;/a> available on GitHub, a new open source project that helps developers use deep learning to create intelligent applications. We&amp;rsquo;re looking for feedback on the direction. It&amp;rsquo;s not finished, in fact, we only started this summer, and we invite you to try out the alpha.&lt;/p>
&lt;div style="display: flex; justify-content: center;">
&lt;img style="max-width: 600px;" width="100%" src="https://res.craft.do/user/full/f6ea57b9-4723-ca7b-aa16-e2a916601d59/doc/E951CFE6-D24A-4C02-A796-FFFCFC5FD5A9/A1AAFFBD-0AE9-47B5-AC9C-D37A6932CE5B_2/screen.png" />
&lt;/div>
&lt;p style="text-align: center;">
&lt;i>Figure 1. Adding a Spice.ai pod, training and getting a recommendation in three commands&lt;/i>
&lt;/p>
&lt;p>Like many developer stories, it all started with a side-project. We were interested in &lt;a href="https://en.wikipedia.org/wiki/Neurofeedback">neurofeedback&lt;/a>, a type of biofeedback therapy that reinforces healthy brain function but can cost up to $15,000. We wanted to make it accessible to more people, so we set out to build a system that leverages AI to deliver neurofeedback more cost-effectively. Using AI for the application was much more challenging than expected, and this sparked the inspiration for Spice.ai.&lt;/p>
&lt;p>In the neurofeedback project, we worked with brain activity &lt;a href="https://en.wikipedia.org/wiki/Electroencephalographyhttps://en.wikipedia.org/wiki/Electroencephalography">EEG&lt;/a> data - time series data. We realized that time series data applies to many domains, from health and biometrics to finance, sales, logistics, security, IoT, and application monitoring. The amount of time series data in these fields is growing exponentially, and extracting insights from this data to make more intelligent software will determine the success of the next generation of applications.&lt;/p>
&lt;p>We also realized that handling time series data is often sensitive, such as with health, financial, and security data. Instead of sending all data into a 3rd-party AI service, we needed the choice to bring the AI runtime to wherever our data and compute lived, either in the cloud, on-premises or on edge devices.&lt;/p>
&lt;h3 id="spiceai---a-modern-development-experience-and-open-source-runtime-for-deep-learning-on-time-series-data">Spice.ai - a modern development experience and open source runtime for deep learning on time series data&lt;/h3>
&lt;p>Spice.ai is an open source, portable runtime for training and using deep learning on time series data. It&amp;rsquo;s written in Golang and Python and runs as a container or microservice with applications calling a simple HTTP API. It&amp;rsquo;s deployable to any public cloud, on-premises, and edge.&lt;/p>
&lt;p>The vision for Spice.ai is to make creating intelligent applications as easy as possible for developers in their development environment of choice. Spice.ai brings AI development to their editor in any language or framework with a fast, iterative, inner development loop, continuous-integration (CI), and continuous-deployment (CD) workflows.&lt;/p>
&lt;p>The Spice.ai runtime also includes a library of &lt;a href="https://github.com/spiceai/data-components-contrib">community-driven components&lt;/a> for streaming and processing time series data, enabling developers to quickly and easily combine data with learning to create intelligent models.&lt;/p>
&lt;p>Developers can write easy-to-understand and re-useable, &amp;ldquo;pods,&amp;rdquo; with manifests that connect these data components with a simple definition of the learning environment. These pods also serve as a package for the resulting trained model.&lt;/p>
&lt;p>Modern developers build together with the community by leveraging registries such as npm, NuGet, and pip. The registry for sharing and using pods is &lt;a href="https://spicerack.org">spicerack.org&lt;/a>. As the community shares more and more pods, developers can quickly build upon each others' work, initially by sharing manifests and eventually by reusing fully-trained models.&lt;/p>
&lt;h3 id="applying-spiceai-to-real-world-problems">Applying Spice.ai to real-world problems&lt;/h3>
&lt;p>We are currently piloting Spice.ai with several companies to create the next generation of modern applications, such as optimizing in-store pickups for a large online retailer or scheduling optimizations for healthcare workers and resources. We&amp;rsquo;ve already seen some cool use cases, including suspicious login detection, intelligent cloud-spend analysis, and order routing for a food delivery app.&lt;/p>
&lt;h3 id="learn-more-and-contribute">Learn more and contribute&lt;/h3>
&lt;p>Building intelligent apps that leverage AI is still way too hard, even for advanced developers. Our mission is to make this as easy as creating a modern web page.&lt;/p>
&lt;p>This mission is a huge undertaking and Spice.ai v0.1-alpha has many gaps, including limited deep learning algorithms and training scale, streaming data, simulated environments, and offline learning modes. Pods aren&amp;rsquo;t searchable or even listed on &lt;a href="http://spicerack.org">spicerack.org&lt;/a> yet. But if the vision resonates with you, join us! Our &lt;a href="https://github.com/spiceai/spiceai/blob/trunk/docs/ROADMAP.md">Spice.ai Roadmap&lt;/a> is public, and now that we have launched, the project and work are open for collaboration.&lt;/p>
&lt;p>If you are interested in partnering, we&amp;rsquo;d love to talk. Try out &lt;a href="https://spiceai.org">Spice.ai&lt;/a>, &lt;a href="mailto:hey@spiceai.io">email us&lt;/a> &amp;ldquo;hey,&amp;rdquo; get in touch on &lt;a href="https://discord.com/channels/803820740868571196/803820740868571199">Discord&lt;/a>, or reach out on &lt;a href="https://twitter.com/0xlukekim">Twitter&lt;/a>.&lt;/p>
&lt;p>We are just getting started! 🚀&lt;/p>
&lt;p>&lt;a href="https://twitter.com/0xlukekim">Luke&lt;/a>, &lt;a href="https://twitter.com/leblancphill">Phillip&lt;/a>, and &lt;a href="https://twitter.com/lanesharris">Lane&lt;/a> - Spice.ai project founders&lt;/p></description></item></channel></rss>